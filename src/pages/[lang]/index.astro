---
import type { Language } from "@/i18n/types";
import { languages, defaultLang } from "@/i18n/config";
import { siteConfig } from "@/config/site";
import { generateGameSchema } from "@/utils/schema";
import { useTranslations } from "@/i18n/core/utils";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Hero from "@/components/sections/Hero.astro";
import GameEmbed from "@/components/sections/GameEmbed.astro";
import Features from "@/components/sections/Features.astro";
import FAQ from "@/components/sections/FAQ.astro";

export function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({
    params: { lang },
  }));
}

const { lang } = Astro.params as { lang: Language };

// 验证语言参数
if (!languages[lang]) {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
}

// 如果访问默认语言的URL，重定向到根路径
if (lang === defaultLang) {
  return Astro.redirect("/");
}

// 页面元数据
const t = useTranslations(lang);
const title = t("site.title");
const description = t("site.description");
const canonicalURL = new URL(Astro.url.pathname, siteConfig.url);

// 生成结构化数据
const gameSchema = generateGameSchema(siteConfig, canonicalURL);

// 页面属性
const props = {
  title,
  description,
  canonicalURL: canonicalURL.toString(),
  schema: gameSchema as unknown as Record<string, unknown>,
  image: siteConfig.ogImage,
  lang,
};
---

<BaseLayout {...props}>
  <main id="main">
    <Hero />
    <GameEmbed />
    <Features />
    <FAQ />
  </main>
</BaseLayout>

<style>
  main {
    @apply flex flex-col gap-16 md:gap-24;
  }
</style>
