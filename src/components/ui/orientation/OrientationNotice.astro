---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import OrientationNoticeClient from "./OrientationNoticeClient";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const translations = {
  title: t("orientation.title"),
  rotateAction: t("orientation.rotate"),
  continueAction: t("orientation.continue"),
  rememberChoice: t("orientation.remember"),
};
---

<OrientationNoticeClient translations={translations} client:visible />

<style>
  :global(.orientation-notice) {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    color: white;
    text-align: center;
    padding: 2rem;
  }

  :global(.notice-content) {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  :global(.rotate-icon) {
    animation: rotate 2s infinite linear;
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  :global(.notice-actions) {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }

  :global(.action-button) {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  :global(.rotate-action) {
    background: var(--color-primary);
    color: white;
  }

  :global(.continue-action) {
    background: transparent;
    border: 1px solid white;
    color: white;
  }

  :global(.remember-choice) {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 1rem;
    font-size: 0.75rem;
    color: var(--color-text-muted);
  }

  :global(.remember-checkbox) {
    width: 1rem;
    height: 1rem;
  }
</style>
