---
import { siteConfig } from "@/config/site";
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from "@/i18n/utils";
import Container from "@/components/layout/Container.astro";
import LanguageSelector from "@/components/ui/LanguageSelector.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<header class="header" role="banner">
  <Container>
    <nav class="nav" role="navigation" aria-label={t("nav.mainNavigation")}>
      <a href={translatePath("/")} class="logo" aria-label={siteConfig.name}>
        <img src="/logo.svg" alt={siteConfig.name} width="32" height="32" />
      </a>

      <div class="nav-center" role="menubar">
        <a
          href={translatePath("/")}
          class="nav-link"
          role="menuitem"
          aria-current={Astro.url.pathname === "/" ? "page" : undefined}
        >
          {t("nav.home")}
        </a>
        <a href={translatePath("/#game")} class="nav-link" role="menuitem">
          {t("nav.game")}
        </a>
        <a href={translatePath("/#features")} class="nav-link" role="menuitem">
          {t("nav.features")}
        </a>
        <a href={translatePath("/#faq")} class="nav-link" role="menuitem">
          {t("nav.faq")}
        </a>
      </div>

      <div class="nav-right">
        <LanguageSelector />
        <button
          type="button"
          class="menu-button"
          aria-label={t("nav.toggleMenu")}
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <span class="menu-icon"></span>
        </button>
      </div>
    </nav>
  </Container>

  <div id="mobile-menu" class="mobile-menu" hidden>
    <nav class="mobile-nav" aria-label={t("nav.mainNavigation")}>
      <a
        href={translatePath("/")}
        class="mobile-nav-link"
        aria-current={Astro.url.pathname === "/" ? "page" : undefined}
      >
        {t("nav.home")}
      </a>
      <a href={translatePath("/#game")} class="mobile-nav-link">
        {t("nav.game")}
      </a>
      <a href={translatePath("/#features")} class="mobile-nav-link">
        {t("nav.features")}
      </a>
      <a href={translatePath("/#faq")} class="mobile-nav-link">
        {t("nav.faq")}
      </a>
    </nav>
  </div>
</header>

<script>
class MobileMenu {
  constructor() {
    this.button = document.querySelector('button[aria-controls="mobile-menu"]');
    this.menu = document.getElementById('mobile-menu');
    this.button?.addEventListener('click', () => this.toggleMenu());
  }

  toggleMenu() {
    const isExpanded = this.button?.getAttribute('aria-expanded') === 'true';
    this.button?.setAttribute('aria-expanded', (!isExpanded).toString());
    this.menu?.toggleAttribute('hidden');
  }
}

new MobileMenu();
</script>

<style>
  .header {
    position: sticky;
    top: 0;
    z-index: 50;
    background-color: var(--color-background);
    border-bottom: 1px solid var(--color-border);
  }

  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 4rem;
  }

  .logo {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    border-radius: 0.5rem;
  }

  .logo:hover {
    background-color: var(--color-hover);
  }

  .logo:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .nav-center {
    display: none;
    gap: 1rem;
  }

  @media (min-width: 768px) {
    .nav-center {
      display: flex;
    }
  }

  .nav-link {
    padding: 0.5rem;
    border-radius: 0.5rem;
    color: var(--color-text);
    text-decoration: none;
  }

  .nav-link:hover {
    background-color: var(--color-hover);
  }

  .nav-link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .nav-link[aria-current="page"] {
    color: var(--color-primary);
    font-weight: 500;
  }

  .nav-right {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .menu-button {
    display: flex;
    padding: 0.5rem;
    border: none;
    border-radius: 0.5rem;
    background: none;
    cursor: pointer;
  }

  @media (min-width: 768px) {
    .menu-button {
      display: none;
    }
  }

  .menu-button:hover {
    background-color: var(--color-hover);
  }

  .menu-button:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .menu-icon {
    width: 1.5rem;
    height: 0.125rem;
    background-color: var(--color-text);
    position: relative;
  }

  .menu-icon::before,
  .menu-icon::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--color-text);
    transition: transform 0.15s ease;
  }

  .menu-icon::before {
    transform: translateY(-0.5rem);
  }

  .menu-icon::after {
    transform: translateY(0.5rem);
  }

  .mobile-menu {
    position: fixed;
    top: 4rem;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color-background);
    padding: 1rem;
  }

  .mobile-nav {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-nav-link {
    padding: 0.75rem;
    border-radius: 0.5rem;
    color: var(--color-text);
    text-decoration: none;
  }

  .mobile-nav-link:hover {
    background-color: var(--color-hover);
  }

  .mobile-nav-link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .mobile-nav-link[aria-current="page"] {
    color: var(--color-primary);
    font-weight: 500;
  }
</style> 