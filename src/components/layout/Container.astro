---
import type { HTMLAttributes } from "astro/types";

type ValidElements =
  | "div"
  | "section"
  | "article"
  | "main"
  | "aside"
  | "header"
  | "footer";
type ContainerSize = "sm" | "md" | "lg" | "xl" | "full";
type AriaRole =
  | "presentation"
  | "group"
  | "region"
  | "contentinfo"
  | "banner"
  | "main"
  | "complementary";

interface BaseProps
  extends Omit<HTMLAttributes<"div">, "role" | "aria-label" | "class"> {
  class?: string;
  as?: ValidElements;
  size?: ContainerSize;
  role?: AriaRole;
  "aria-label"?: string;
}

export type Props = BaseProps;

const {
  class: className = "",
  as: Element = "div",
  size = "xl" as const,
  role,
  "aria-label": ariaLabel,
  ...rest
} = Astro.props;

// 使用 const 断言确保类型安全
const sizeClasses = {
  sm: "max-w-3xl",
  md: "max-w-5xl",
  lg: "max-w-6xl",
  xl: "max-w-7xl",
  full: "max-w-full",
} as const satisfies Record<ContainerSize, string>;

// 使用 memo 优化类名计算
const containerClasses = [
  "mx-auto w-full px-4 sm:px-6 lg:px-8",
  sizeClasses[size as ContainerSize],
  className,
];
---

<Element
  {...rest}
  class:list={containerClasses}
  role={role}
  aria-label={ariaLabel}
>
  <slot />
</Element>

<style>
  :where([class*="max-w"]) {
    transition: padding var(--theme-transition-duration, 150ms)
      var(--theme-transition-timing, ease-in-out);
  }

  @media (max-width: 640px) {
    :where([class*="max-w"]) {
      padding-left: max(1rem, env(safe-area-inset-left, 1rem));
      padding-right: max(1rem, env(safe-area-inset-right, 1rem));
    }
  }
</style>
