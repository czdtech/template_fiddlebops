---
import { getLangFromUrl, useTranslations } from "@/i18n/core/utils";
import ScreenReader from "@/components/a11y/ScreenReader.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section
  class="hero"
  aria-labelledby="hero-title"
  role="banner"
  aria-describedby="hero-description"
>
  <div class="container">
    <div class="hero-content">
      <h1 id="hero-title" class="title">
        <span class="gradient-text">{t("hero.title")}</span>
      </h1>
      <p id="hero-description" class="description">
        {t("hero.description")}
      </p>
    </div>
  </div>
  <ScreenReader id="hero-announcer" />
</section>

<style>
  .hero {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: var(--hero-min-height, 20vh);
    padding: var(--section-padding-y) 0;
    margin: 0;
    background: var(--color-background-dark);
    overflow: hidden;
  }

  .hero::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--hero-gradient);
    opacity: 0.15;
    pointer-events: none;
  }

  .container {
    width: 100%;
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 0 var(--container-padding);
  }

  .hero-content {
    position: relative;
    z-index: 1;
    text-align: center;
    max-width: var(--hero-content-max-width, 800px);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    animation: var(--hero-animation);
  }

  .title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    line-height: 1.2;
    margin-bottom: var(--spacing-6);
    font-weight: 700;
  }

  .gradient-text {
    background: var(--text-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .description {
    font-size: clamp(1.1rem, 2vw, 1.25rem);
    line-height: 1.6;
    margin-bottom: var(--spacing-4);
    color: var(--color-text-muted);
    max-width: var(--hero-description-max-width, 540px);
    margin-left: auto;
    margin-right: auto;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .hero {
      min-height: var(--hero-min-height-tablet, 18vh);
      padding: var(--section-padding-y-tablet) 0;
    }

    .hero-content {
      padding: 0 var(--container-padding);
    }

    .title {
      font-size: clamp(1.5rem, 6vw, 2.5rem);
      margin-bottom: var(--spacing-4);
    }

    .description {
      font-size: var(--font-size-base);
      margin-bottom: var(--spacing-6);
      padding: 0 var(--container-padding);
    }
  }

  @media (max-width: 480px) {
    .hero {
      min-height: var(--hero-min-height-mobile, 15vh);
      padding: var(--section-padding-y-mobile) 0;
    }

    .title {
      font-size: clamp(1.25rem, 5vw, 2rem);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .hero-content {
      animation: none;
    }
  }
</style>

<script>
  // 添加渐入动画
  document.addEventListener("DOMContentLoaded", () => {
    const heroContent = document.querySelector(".hero-content");
    if (heroContent instanceof HTMLElement) {
      heroContent.style.setProperty(
        "--hero-animation",
        "fadeIn 0.8s ease-out forwards"
      );
    }
  });
</script>
