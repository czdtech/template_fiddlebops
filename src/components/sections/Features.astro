---
import { getLangFromUrl, useTranslations } from "@/i18n/core/utils";
import { features } from "@/data/features";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section
  id="features"
  class="features"
  role="region"
  aria-labelledby="features-title"
>
  <div class="container">
    <h2 id="features-title" class="section-title">
      <span class="gradient-text">{t("features.title")}</span>
    </h2>
    <p class="section-subtitle">
      {t("features.subtitle")}
    </p>
    <div class="features-grid">
      {
        features.map((feature) => (
          <article
            class="feature-card"
            tabindex="0"
            aria-label={t(feature.title)}
          >
            <div class="feature-icon" aria-hidden="true">
              {feature.icon}
            </div>
            <h3>{t(feature.title)}</h3>
            <p>{t(feature.description)}</p>
          </article>
        ))
      }
    </div>
  </div>
</section>

<style>
  .features {
    padding: 3rem 0;
    background: var(--color-background);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .section-title {
    text-align: center;
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    margin-bottom: 2rem;
    font-weight: bold;
  }

  .gradient-text {
    background: var(--text-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    position: relative;
  }

  .gradient-text::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: var(--color-primary);
    border-radius: 3px;
  }

  .section-subtitle {
    text-align: center;
    color: var(--color-text-muted);
    margin-bottom: 3rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 1rem;
  }

  .feature-card {
    background: var(--color-background-light);
    border-radius: var(--card-border-radius);
    padding: var(--card-padding-desktop);
    text-align: center;
    transition: all 0.3s ease;
    outline: none;
    position: relative;
  }

  .feature-card:hover,
  .feature-card:focus-visible {
    transform: var(--card-hover-transform);
    box-shadow: var(--card-shadow);
  }

  .feature-card:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }

  .feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    display: inline-block;
  }

  .feature-card h3 {
    color: var(--color-text);
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
  }

  .feature-card p {
    color: var(--color-text-muted);
    font-size: 0.875rem;
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    .features {
      padding: 2rem 0;
    }

    .feature-card {
      padding: var(--card-padding-tablet);
    }

    .feature-icon {
      font-size: 2rem;
    }

    .feature-card h3 {
      font-size: 1.125rem;
    }
  }

  @media (max-width: 480px) {
    .features {
      padding: 1.5rem 0;
    }

    .feature-card {
      padding: var(--card-padding-mobile);
    }

    .feature-icon {
      font-size: 1.75rem;
    }

    .feature-card h3 {
      font-size: 1rem;
    }

    .feature-card p {
      font-size: 0.8125rem;
    }
  }

  /* 确保移动设备上的触摸反馈 */
  @media (hover: none) {
    .feature-card:active {
      transform: translateY(-2px);
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    }
  }
</style>
