---
const navItems = [
  {
    href: "#play-fiddlebops",
    text: "开始游戏",
  },
  {
    href: "#features",
    text: "游戏特色",
  },
  {
    href: "#faq",
    text: "常见问题",
  },
];
---

<div class="sticky top-0 z-50">
  <header class="bg-background-light bg-opacity-95 shadow-md relative">
    <nav class="container mx-auto px-4 py-4">
      <div class="flex justify-between items-center">
        <a
          href={new URL("/", Astro.site).toString()}
          class="text-lg md:text-xl font-bold text-primary hover:text-primary/90 transition-standard"
        >
          FiddleBops
        </a>

        <button
          type="button"
          class="block lg:hidden"
          aria-label="切换菜单"
          aria-expanded="false"
          id="menu-button"
        >
          <span class="sr-only">打开菜单</span>
          <svg
            class="w-6 h-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>

        <ul class="fixed inset-0 bg-background-light/95 flex-col items-center justify-center space-y-6 lg:space-y-0 lg:space-x-8 hidden lg:static lg:flex lg:flex-row lg:bg-transparent" id="navigation-menu">
          {
            navItems.map(({ href, text }) => (
              <li>
                <a
                  href={href}
                  class="text-text hover:text-primary transition-standard py-2 relative after:absolute after:left-0 after:bottom-0 after:h-0.5 after:w-0 hover:after:w-full after:bg-primary after:transition-standard"
                >
                  {text}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </nav>
  </header>
</div>

<script>
  const menuButton = document.getElementById("menu-button");
  const navigationMenu = document.getElementById("navigation-menu");
  const navLinks = navigationMenu?.querySelectorAll('a');

  if (menuButton && navigationMenu) {
    menuButton.addEventListener("click", () => {
      const isExpanded = menuButton.getAttribute("aria-expanded") === "true";
      menuButton.setAttribute("aria-expanded", (!isExpanded).toString());
      navigationMenu.classList.toggle("hidden");
      document.body.style.overflow = isExpanded ? '' : 'hidden';
    });

    navLinks?.forEach(link => {
      link.addEventListener('click', () => {
        navigationMenu.classList.add('hidden');
        menuButton.setAttribute("aria-expanded", "false");
        document.body.style.overflow = '';
      });
    });
  }
</script> 